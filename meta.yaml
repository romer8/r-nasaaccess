{% set version = '3.0.0' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-nasaaccess
  version: {{ version|replace("-", "_") }}

source:

  git_url: https://github.com/nasa/NASAaccess
  git_tag: v3.0.0

build:
  merge_build_host: True  # [win]
  # If this is a new build for the same version, increment the build number.
  number: 0
  # no skip

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

# Suggests: markdown, rmarkdown, knitr
requirements:
  build:
    - {{ posix }}filesystem        # [win]
    - {{ posix }}git
    - {{ posix }}zip               # [win]

  host:
    - r-base=4.1.2
    - r-xml
    - r-ggmap
    - r-ggplot2
    - r-httr
    - r-maptools
    - r-ncdf4
    - r-raster=3.5_11
    - r-rgdal
    - r-rgeos
    - r-sf
    - r-shapefiles
    - r-sp
    - r-stringr

  run:
    - r-base=4.1.2
    - r-xml
    - r-ggmap
    - r-ggplot2
    - r-httr
    - r-maptools
    - r-ncdf4
    - r-raster
    - r-rgdal
    - r-rgeos
    - r-sf
    - r-shapefiles
    - r-sp
    - r-stringr

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('NASAaccess')"           # [not win]
    - "\"%R%\" -e \"library('NASAaccess')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: https://github.com/nasa/NASAaccess

  license: file LICENSE
  summary: A tool to generate gridded ascii tables and station files needed by hydrological models
    for weather and climate inputs. The package assumes that users have already set
    up a registration account(s) with Earthdata login as well as authorizing NASA GES
    DISC data access. Please refer to  <https://disc.gsfc.nasa.gov/data-access> for
    further details. The package relies on 'curl' <https://curl.se/> commands and library
    to access NASA remote sensing servers. Users should make sure that their local machines
    have 'curl' installed properly.  Instructions on creating the ".netrc" and ".urs_cookies"
    files can be accessed at <https://wiki.earthdata.nasa.gov/display/EL/How+To+Access+Data+With+cURL+And+Wget>.
    Creating the ".netrc" file at the user machine 'Home' directory and storing the
    NASA GES DISC user logging information in it is needed to execute the package commands.

  license_family: OTHER
  license_file:
    - LICENSE

# The original CRAN metadata for this package was:

# Package: NASAaccess
# Version: 3.0.0
# Date: 2022-01-13
# Type: Package
# Title: Downloading and Reformatting Tool for NASA Earth Observation Data Products
# Authors@R: c(person("Ibrahim", "Mohammed", role = c("aut", "cre"), comment = c(ORCID = "0000-0002-6542-319X"), email = "ibrahim.mohammed@nasa.gov"))
# Maintainer: Ibrahim Mohammed <ibrahim.mohammed@nasa.gov>
# Depends: R (>= 4.0)
# Description: A tool to generate gridded ascii tables and station files needed by hydrological models for weather and climate inputs. The package assumes that users have already set up a registration account(s) with Earthdata login as well as authorizing NASA GES DISC data access. Please refer to  <https://disc.gsfc.nasa.gov/data-access> for further details. The package relies on 'curl' <https://curl.se/> commands and library to access NASA remote sensing servers. Users should make sure that their local machines have 'curl' installed properly.  Instructions on creating the ".netrc" and ".urs_cookies" files can be accessed at <https://wiki.earthdata.nasa.gov/display/EL/How+To+Access+Data+With+cURL+And+Wget>. Creating the ".netrc" file at the user machine 'Home' directory and storing the NASA GES DISC user logging information in it is needed to execute the package commands.
# URL: https://github.com/nasa/NASAaccess
# Imports: ncdf4, stats, shapefiles, rgeos, maptools, httr, stringr, rgdal, XML, sp, utils, raster, methods, sf, ggmap, ggplot2
# License: file LICENSE
# Encoding: UTF-8
# LazyData: true
# RoxygenNote: 7.1.2
# Suggests: markdown, rmarkdown, knitr
# VignetteBuilder: knitr

# See
# https://docs.conda.io/projects/conda-build for
# more information about meta.yaml
